# ---- Login to Azure ----
az account show
az account list --all -o table
az login

sub="aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
az account set --subscription $sub

# ---- Variables ----
#      for use in a sub shell each variable has to be exported
#      export foo="bar"
#      ^^^^^^
#      az ... | xargs -L1 bash -c 'az ... "$foo"'

export location="westeurope"
export rgName="tel42-RG"

# ---- Resource Groups ----
az group create --name $rgName --location $location --tags "seminar=ps-61"
az group list -o table
az resource list --resource-group $rgName --query "[].{Name:name, Type:type}" -o table
az group delete --name $rgName --yes --no-wait
#      Remove all content of resource group (template empty.json) - complete mode!
az deployment group create \
    --mode Complete \
    --resource-group $rgName \
    --template-uri "https://raw.githubusercontent.com/www42/arm/master/templates/empty.json" \
    --name tabulaRasa \
    --no-wait


# ==== Deploy ARM template ========================
template="https://raw.githubusercontent.com/www42/arm/master/templates/vnet.json"

az deployment group create \
    --name tel42-01 \
    --template-uri $template \
    --resource-group $rgName \
    --parameters vnetName=tel42-VNet 
#
# =================================================



# Template vnet.json (Virtual Network)
# ------------------------------------
#   deploy
deploymentName="mi01"
vNet="Vnet2"
az deployment group create  \
    --template-uri "https://raw.githubusercontent.com/www42/arm/master/templates/vnet.json" \
    --parameters vnetName=$vNet \
    --resource-group $rgName \
    --name $deploymentName

#   list vnet
az network vnet list --resource-group $rgName -o table

#   remove single vnet
az network vnet delete --name $vNet --resource-group $rgName

#   remove all vnet
az network vnet list --resource-group $rgName --query "[]".name --output tsv | \
    xargs -L1 bash -c 'az network vnet delete --name $0 --resource-group "$rgName"'


# Template subnet.json (Additional Subnet)
# ----------------------------------------
#   deploy
deploymentName="mi02"
vNet="Vnet2"
subnet="AzureBastionSubnet"
addressPrefix="10.0.200.192/26"
az deployment group create \
    --template-uri "https://raw.githubusercontent.com/www42/arm/master/templates/subnet.json"\
    --parameters  vnetName=$vNet \
    --parameters  subnetName=$subnet \
    --parameters  addressPrefix=$addressPrefix \
    --resource-group $rgName \
    --name $deploymentName

#  -list
az network vnet subnet list --resource-group $rgName --vnet-name $vNet --query "[].{Name:name,Prefix:addressPrefix}" -o table


# Template vnet_bastion.json (Virtual Network with Bastion Host)
# --------------------------------------------------------------
#   deploy
deploymentName="mi03"
vNet="Vnet2"
az deployment group create \
    --template-uri "https://raw.githubusercontent.com/www42/arm/master/templates/vnet_bastion.json"\
    --parameters  vnetName=$vNet \
    --resource-group $rgName \
    --name $deploymentName


bastion="$vNet-Bastion"
bastionIp="$bastionHost-Ip"
#   list bastion
az network bastion list --query "[].{Name:name, Location:location, resourceGroup:resourceGroup}" -o table

#   remove single bastion
az network bastion delete --name $bastion --resource-group $rgName

#   list public ip
az network public-ip list -o table

#   remove single public ip
az network public-ip delete --name $bastionIp --resource-group $rgName



# Template vnet_bastion_vm.json (Virtual Network with Bastion Host and single VM)
# -------------------------------------------------------------------------------
#   deploy
deploymentName="do01"
az deployment group create \
    --template-uri "https://raw.githubusercontent.com/www42/arm/master/templates/vnet_bastion_vm.json" \
    --resource-group $rgName \
    --name $deploymentName

#    list vm
az vm list --resource-group $rgName --show-details -o table

#    stop single vm
vmName="SVR1"
az vm deallocate --name $vmName --resource-group $rgName

#    stop all vm in rg
az vm list --resource-group $rgName --query "[].name" -o tsv | \
    xargs -L1 bash -c 'az vm deallocate --name $0 --resource-group "$rgName"'



# Template ps-61.json (Virtual Network with Bastion Host and three VMs)
# ---------------------------------------------------------------------
#   deploy
deploymentName="mon01"
templateUri="https://raw.githubusercontent.com/www42/arm/master/templates/ps-61dconly.json"
az deployment group create \
    --template-uri $templateUri \
    --resource-group $rgName \
    --name $deploymentName

# Automation Account
# ------------------
deploymentName="sun04"
templateUri="https://raw.githubusercontent.com/www42/arm/master/templates/automationAccount.json"
az deployment group create \
    --template-uri $templateUri \
    --resource-group $rgName \
    --name $deploymentName


az vm extension list --resource-group $rgName --vm-name DC -o table


# Vergleiche AZ-301 T04 Mod 02 Lab  (VMs)
#
# Dort wird eien DSC Extension in ein Scale Set deploued mit ARM Template.